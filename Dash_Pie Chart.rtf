{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red23\green23\blue23;\red202\green202\blue202;
\red183\green111\blue179;\red194\green126\blue101;\red70\green137\blue204;\red140\green211\blue254;\red67\green192\blue160;
\red167\green197\blue152;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c77255\c52549\c75294;\cssrgb\c80784\c56863\c47059;\cssrgb\c33725\c61176\c83922;\cssrgb\c61176\c86275\c99608;\cssrgb\c30588\c78824\c69020;
\cssrgb\c70980\c80784\c65882;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Import required packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  pandas \cf5 \strokec5 as\cf4 \strokec4  pd\cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  plotly.express \cf5 \strokec5 as\cf4 \strokec4  px\cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  dash\cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  dash_html_components \cf5 \strokec5 as\cf4 \strokec4  html\cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  dash_core_components \cf5 \strokec5 as\cf4 \strokec4  dcc\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Read the airline data into pandas dataframe\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 airline_data =  pd.read_csv(\cf6 \strokec6 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data\cf7 \strokec7 %20F\cf6 \strokec6 iles/airline_data.csv'\cf4 \strokec4 , \cb1 \
\cb3                             \cf8 \strokec8 encoding\cf4 \strokec4  = \cf6 \strokec6 "ISO-8859-1"\cf4 \strokec4 ,\cb1 \
\cb3                             \cf8 \strokec8 dtype\cf4 \strokec4 =\{\cf6 \strokec6 'Div1Airport'\cf4 \strokec4 : \cf9 \strokec9 str\cf4 \strokec4 , \cf6 \strokec6 'Div1TailNum'\cf4 \strokec4 : \cf9 \strokec9 str\cf4 \strokec4 , \cb1 \
\cb3                                    \cf6 \strokec6 'Div2Airport'\cf4 \strokec4 : \cf9 \strokec9 str\cf4 \strokec4 , \cf6 \strokec6 'Div2TailNum'\cf4 \strokec4 : \cf9 \strokec9 str\cf4 \strokec4 \})\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Randomly sample 500 data points. Setting the random state to be 42 so that we get same result.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 data = airline_data.sample(\cf8 \strokec8 n\cf4 \strokec4 =\cf10 \strokec10 500\cf4 \strokec4 , \cf8 \strokec8 random_state\cf4 \strokec4 =\cf10 \strokec10 42\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Pie Chart Creation\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 fig = px.pie(data, \cf8 \strokec8 values\cf4 \strokec4 =\cf6 \strokec6 'Flights'\cf4 \strokec4 , \cf8 \strokec8 names\cf4 \strokec4 =\cf6 \strokec6 'DistanceGroup'\cf4 \strokec4 , \cf8 \strokec8 title\cf4 \strokec4 =\cf6 \strokec6 'Distance group proportion by flights'\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Create a dash application\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 app = dash.Dash(\cf8 \strokec8 __name__\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Get the layout of the application and adjust it.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Create an outer division using html.Div and add title to the dashboard using html.H1 component\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Add description about the graph using HTML P (paragraph) component\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Finally, add graph component.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 app.layout = html.Div(\cf8 \strokec8 children\cf4 \strokec4 =[html.H1(\cf6 \strokec6 'Airline Dashboard'\cf4 \strokec4 ,\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf8 \cb3 \strokec8 style\cf4 \strokec4 =\{\cf6 \strokec6 'textAlign'\cf4 \strokec4 : \cf6 \strokec6 'center'\cf4 \strokec4 , \cf6 \strokec6 'color'\cf4 \strokec4 : \cf6 \strokec6 '#503D36'\cf4 \strokec4 , \cf6 \strokec6 'font-size'\cf4 \strokec4 : \cf10 \strokec10 40\cf4 \strokec4 \}),\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3                                 html.P(\cf6 \strokec6 'Proportion of distance group (250 mile distance interval group) by flights.'\cf4 \strokec4 , \cf8 \strokec8 style\cf4 \strokec4 =\{\cf6 \strokec6 'textAlign'\cf4 \strokec4 :\cf6 \strokec6 'center'\cf4 \strokec4 , \cf6 \strokec6 'color'\cf4 \strokec4 : \cf6 \strokec6 '#F57241'\cf4 \strokec4 \}),\cb1 \
\cb3                                 dcc.Graph(\cf8 \strokec8 figure\cf4 \strokec4 =fig),\cb1 \
\
\cb3                     ])\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 # Run the application                   \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 if\cf4 \strokec4  \cf8 \strokec8 __name__\cf4 \strokec4  == \cf6 \strokec6 '__main__'\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     app.run_server()\cb1 \
}